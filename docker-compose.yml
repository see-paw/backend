services:
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: WebAPI/Dockerfile
    depends_on:
      database:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ConnectionStrings__DefaultConnection: Host=database;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      ASPNETCORE_URLS: https://+:5001;http://+:5000
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_Kestrel__Certificates__Default__Password: password123
    volumes:
      - ~/.aspnet/https:/https:ro
    ports:
      - "5000:5000"
      - "5001:5001"

  database:
    image: postgres:13
    container_name: database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U seepaw -d seepaw"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  pg_data:
